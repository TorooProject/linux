#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          pommed
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: pommed daemon providing macbook backlight control
# Description:       Start pommed to allow control over backlight on macbook
### END INIT INFO


# Check for missing binaries (stale symlinks should not happen)
# Note: Special treatment of stop for LSB conformance
POMMED_BIN=/usr/sbin/pommed

#. /etc/rc.status

# Reset status of this service
#rc_reset


case "$1" in
    start)
	echo -n "Starting pommed "
	## Start daemon with startproc(8). If this fails
	## the return value is set appropriately by startproc.
	$POMMED_BIN

	# Remember status and be verbose
	#rc_status -v
	;;
    stop)
	echo -n "Shutting down pommed "
	## Stop daemon with killproc(8) and if this fails
	## killproc sets the return value according to LSB.

	killall $POMMED_BIN

	# Remember status and be verbose
	#rc_status -v
	;;
    try-restart|condrestart)
	## Do a restart only if the service was active before.
	## Note: try-restart is now part of LSB (as of 1.9).
	## RH has a similar command named condrestart.
	if test "$1" = "condrestart"; then
		echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
	fi
	$0 status
	if test $? = 0; then
		$0 restart
	else
		echo "" #rc_reset	# Not running is not a failure.
	fi
	# Remember status and be quiet
	#rc_status
	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	$0 start

	# Remember status and be quiet
	#rc_status
	;;
    force-reload)
	## Signal the daemon to reload its config. Most daemons
	## do this on signal 1 (SIGHUP).
	## If it does not support it, restart the service if it
	## is running.

	echo -n "Reload service pommed "
	$0 try-restart
	#rc_status
	;;
    reload)
	## Like force-reload, but if daemon does not support
	## signaling, do nothing (!)
	#rc_failed 3
	#rc_status -v
	;;
    status)
	echo -n "Checking for service pommed "
	## Check status with checkproc(8), if process is running
	## checkproc will return with exit status 0.

	# Return value is slightly different for the status command:
	# 0 - service up and running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running (unused)
	# 4 - service status unknown :-(
	# 5--199 reserved (5--99 LSB, 100--149 distro, 150--199 appl.)
	
	# NOTE: checkproc returns LSB compliant status values.
	/sbin/checkproc $POMMED_BIN
	# NOTE: rc_status knows that we called this init script with
	# "status" option and adapts its messages accordingly.
	#rc_status -v
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
	exit 1
	;;
esac
#rc_exit
